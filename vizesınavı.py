







import tkinter as tk

sorular = [
    ("En sevdiƒüim renk nedir?", "siyah", "Doƒüru cevap siyah, √ß√ºnk√º siyah hem sade hem karizmatiktir."),
    ("En sevdiƒüim yemek nedir?", "et", "Etli yemekleri seviyorum, hele g√ºzel pi≈ümi≈ü bir kebap gibisi yok."),
    ("En b√ºy√ºk takƒ±ntƒ±m nedir?", "sakƒ±z √ßiƒünenmesi", "Sakƒ±z sesi beni deli eder, en b√ºy√ºk takƒ±ntƒ±m bu."),
    ("En b√ºy√ºk hobim nedir?", "yeni yerler ke≈üfetmek", "Yeni yerler gezmek, g√∂rmek beni her zaman mutlu eder."),
    ("En sevmediƒüim huyum nedir?", "sabahlarƒ± suratsƒ±z olmak", "Sabahlarƒ± biraz asƒ±k suratlƒ± olabiliyorum, kabul."),
    ("≈ûehnaz'ƒ±n plakasƒ± nedir?", "06 cod 796", "06 COD 796 ‚Äì ezberimde bile artƒ±k bu plaka."),
    ("Ben en √ßok neyi √∂zledim?", "sareye sarƒ±lmayƒ±", "Sare'ye sarƒ±lmayƒ± √∂zlemek ba≈üka bir duygu..."),
    ("Balƒ±mla en sevdiƒüim aktivite nedir?", "lazer ile balƒ±mƒ± delirtmek", "Lazerle oynamak ve balƒ±mƒ± √ßƒ±ldƒ±rtmak en keyifli anlardan."),
    ("Seni bana hangi ≈üarkƒ± hatƒ±rlatƒ±yor olabilir?", "deva bize sevi≈üler", "Bazƒ± ≈üarkƒ±lar vardƒ±r, ki≈üileri hatƒ±rlatƒ±r. Bu da √∂yle."),
    ("En sevdiƒüim ≈üarkƒ± nedir?", "soldier of fortune", "Deep Purple'ƒ±n efsane ≈üarkƒ±sƒ± Soldier of Fortune!")
]

puan = 0
soru_index = 0
kalan_sure = 25
zamanlayici_id = None

def zaman_sayaci():
    global kalan_sure, zamanlayici_id
    if kalan_sure > 0:
        kalan_sure -= 1
        sure_label.config(text=f"Kalan s√ºre: {kalan_sure} sn")
        zamanlayici_id = pencere.after(1000, zaman_sayaci)
    else:
        cevapla_otomatik()

def soruyu_goster():
    global soru_index, kalan_sure, zamanlayici_id
    if soru_index < len(sorular):
        soru_label.config(text=sorular[soru_index][0])
        cevap_entry.delete(0, tk.END)
        sonuc_label.config(text="")
        adamsin_label.config(text="")  # Yeni alanƒ± sƒ±fƒ±rla
        kalan_sure = 25
        sure_label.config(text=f"Kalan s√ºre: {kalan_sure} sn")
        zaman_sayaci()
    else:
        soru_label.config(text=f"Test bitti! Toplam puanƒ±nƒ±z: {puan}/100")
        cevap_entry.pack_forget()
        cevapla_buton.pack_forget()
        sure_label.pack_forget()
        sonuc_label.config(text="")
        adamsin_label.config(text="")

def cevabi_kontrol_et():
    global puan, soru_index, zamanlayici_id
    pencere.after_cancel(zamanlayici_id)
    kullanici_cevap = cevap_entry.get().strip().lower()
    dogru_cevap = sorular[soru_index][1]
    yorum = sorular[soru_index][2]
    
    if dogru_cevap in kullanici_cevap:
        puan += 10
        sonuc_label.config(text="‚úÖ Doƒüru cevap! +10 puan")
        adamsin_label.config(text="üî• ADAMSIN! üî•")
    else:
        sonuc_label.config(text=f"üò¢ Yanlƒ±≈ü cevap!\n{yorum}")
        adamsin_label.config(text="")
    
    soru_index += 1
    pencere.after(3000, soruyu_goster)

def cevapla_otomatik():
    global soru_index
    yorum = sorular[soru_index][2]
    sonuc_label.config(text=f"üò¢ S√ºre doldu!\n{yorum}")
    adamsin_label.config(text="")
    soru_index += 1
    pencere.after(3000, soruyu_goster)

# GUI Kurulumu
pencere = tk.Tk()
pencere.title("Oƒüuzhan'ƒ±n Ki≈üisel Testi")
pencere.geometry("500x360")

soru_label = tk.Label(pencere, text="", font=("Arial", 12), wraplength=400)
soru_label.pack(pady=20)

sure_label = tk.Label(pencere, text="", font=("Arial", 10), fg="red")
sure_label.pack()

cevap_entry = tk.Entry(pencere, width=50)
cevap_entry.pack()

cevapla_buton = tk.Button(pencere, text="Cevapla", command=cevabi_kontrol_et)
cevapla_buton.pack(pady=10)

sonuc_label = tk.Label(pencere, text="", font=("Arial", 10), fg="blue", wraplength=450)
sonuc_label.pack()

adamsin_label = tk.Label(pencere, text="", font=("Arial", 12, "bold"), fg="green")
adamsin_label.pack(pady=5)

soruyu_goster()
pencere.mainloop()









